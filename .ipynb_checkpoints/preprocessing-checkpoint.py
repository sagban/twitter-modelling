{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "fileName = \"./CSV/data1.csv\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "data = pd.read_csv(fileName, error_bad_lines=False, encoding='latin-1');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_text = data[['text']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RangeIndex(start=0, stop=2000, step=1)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_text.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_text[\"index\"] = data_text.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Modi's Ayushman Bharat is born through caesare...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>RT @drdineshias: First claim raised under #Ayu...</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>First claim raised under Ayushman Bharat with ...</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>RT @SureshNakhua: #ModiCare aka Ayushman Bhara...</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>RT @drdineshias: First claim raised under #Ayu...</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>AAP puts Ayushman Bharat for Delhi in jeopardy...</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>RT @drdineshias: First claim raised under #Ayu...</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>RT @EconomicTimes: #ModiCare's 1st claim was r...</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>RT @NHMGujarat: Mission Director @NHMGujarat h...</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Two days after launch, Ayushman Bharat has its...</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Two days after launch, Ayushman Bharat has its...</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>RT @drdineshias: First claim raised under #Ayu...</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>RT @centerofright: First claim made on #Ayushm...</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>RT @AyushmanNHA: First claim raised under #Ayu...</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>RT @drdineshias: First claim raised under #Ayu...</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>RT @MrsGandhi: Mega health plan crippled as AA...</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1970</th>\n",
       "      <td>RT @khanamirullah: The Ayushma  plan is typica...</td>\n",
       "      <td>1970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1971</th>\n",
       "      <td>ö__ö_Áö_Ëö_¿ö__ö_£ö__ ö_´ö«ó ö_¿ö« ö_Âö_µö_ìö...</td>\n",
       "      <td>1971</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1972</th>\n",
       "      <td>RT @AyushmanNHA: First claim raised under #Ayu...</td>\n",
       "      <td>1972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1973</th>\n",
       "      <td>RT @mlkhattar: 19 day old Karishma from Karnal...</td>\n",
       "      <td>1973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1974</th>\n",
       "      <td>RT @narendramodi: During the 28th PRAGATI Sess...</td>\n",
       "      <td>1974</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1975</th>\n",
       "      <td>RT @narendramodi: During the 28th PRAGATI Sess...</td>\n",
       "      <td>1975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1976</th>\n",
       "      <td>RT @JPNadda: Haryana girl becomes Indiaäó»s fi...</td>\n",
       "      <td>1976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1977</th>\n",
       "      <td>Write Prophesy Ayushman Bharat (Gov't Health I...</td>\n",
       "      <td>1977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978</th>\n",
       "      <td>RT @ANI: Haryana: 19-days-old Karishma, born a...</td>\n",
       "      <td>1978</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1979</th>\n",
       "      <td>RT @AyushmanNHA: First claim raised under #Ayu...</td>\n",
       "      <td>1979</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1980</th>\n",
       "      <td>RT @mlkhattar: 19 day old Karishma from Karnal...</td>\n",
       "      <td>1980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1981</th>\n",
       "      <td>RT @kavita_tewari: First baby angel from #Ayus...</td>\n",
       "      <td>1981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1982</th>\n",
       "      <td>RT @DrSubhashMoS: Haryana girl becomes Indiaäó...</td>\n",
       "      <td>1982</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1983</th>\n",
       "      <td>By building toilets, Modi made aam admi vulner...</td>\n",
       "      <td>1983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1984</th>\n",
       "      <td>RT @Rao_InderjitS: Haryana girl becomes Indiaä...</td>\n",
       "      <td>1984</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1985</th>\n",
       "      <td>RT @Ra_THORe: Born on Independence Day, Haryan...</td>\n",
       "      <td>1985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1986</th>\n",
       "      <td>RT @spmrfoundation: Haryana girl becomes India...</td>\n",
       "      <td>1986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1987</th>\n",
       "      <td>RT @VinodChavdaBJP: Haryana girl becomes India...</td>\n",
       "      <td>1987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1988</th>\n",
       "      <td>RT @Rao_InderjitS: Haryana girl becomes Indiaä...</td>\n",
       "      <td>1988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1989</th>\n",
       "      <td>Haryana girl becomes Indiaäó»s first newborn b...</td>\n",
       "      <td>1989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1990</th>\n",
       "      <td>RT @SidharthNSingh: Pilot run of Ayushman Bhar...</td>\n",
       "      <td>1990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1991</th>\n",
       "      <td>RT @drdineshias: First claim raised under #Ayu...</td>\n",
       "      <td>1991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1992</th>\n",
       "      <td>RT @kuljeetschahal: Haryana girl becomes India...</td>\n",
       "      <td>1992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1993</th>\n",
       "      <td>RT @kuljeetschahal: Haryana girl becomes India...</td>\n",
       "      <td>1993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1994</th>\n",
       "      <td>RT @SidharthNSingh: Pilot run of Ayushman Bhar...</td>\n",
       "      <td>1994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1995</th>\n",
       "      <td>RT @Ra_THORe: Born on Independence Day, Haryan...</td>\n",
       "      <td>1995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1996</th>\n",
       "      <td>RT @JPNadda: Haryana girl becomes Indiaäó»s fi...</td>\n",
       "      <td>1996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1997</th>\n",
       "      <td>RT @mlkhattar: 19 day old Karishma from Karnal...</td>\n",
       "      <td>1997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998</th>\n",
       "      <td>RT @JPNadda: Haryana girl becomes Indiaäó»s fi...</td>\n",
       "      <td>1998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999</th>\n",
       "      <td>RT @amitsurg: Ask doctors what they think abou...</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2000 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   text  index\n",
       "0     Modi's Ayushman Bharat is born through caesare...      0\n",
       "1     RT @centerofright: First claim made on #Ayushm...      1\n",
       "2     RT @drdineshias: First claim raised under #Ayu...      2\n",
       "3     RT @centerofright: First claim made on #Ayushm...      3\n",
       "4     RT @centerofright: First claim made on #Ayushm...      4\n",
       "5     First claim raised under Ayushman Bharat with ...      5\n",
       "6     RT @SureshNakhua: #ModiCare aka Ayushman Bhara...      6\n",
       "7     RT @centerofright: First claim made on #Ayushm...      7\n",
       "8     RT @drdineshias: First claim raised under #Ayu...      8\n",
       "9     AAP puts Ayushman Bharat for Delhi in jeopardy...      9\n",
       "10    RT @centerofright: First claim made on #Ayushm...     10\n",
       "11    RT @centerofright: First claim made on #Ayushm...     11\n",
       "12    RT @centerofright: First claim made on #Ayushm...     12\n",
       "13    RT @centerofright: First claim made on #Ayushm...     13\n",
       "14    RT @centerofright: First claim made on #Ayushm...     14\n",
       "15    RT @centerofright: First claim made on #Ayushm...     15\n",
       "16    RT @centerofright: First claim made on #Ayushm...     16\n",
       "17    RT @drdineshias: First claim raised under #Ayu...     17\n",
       "18    RT @centerofright: First claim made on #Ayushm...     18\n",
       "19    RT @EconomicTimes: #ModiCare's 1st claim was r...     19\n",
       "20    RT @NHMGujarat: Mission Director @NHMGujarat h...     20\n",
       "21    RT @centerofright: First claim made on #Ayushm...     21\n",
       "22    Two days after launch, Ayushman Bharat has its...     22\n",
       "23    Two days after launch, Ayushman Bharat has its...     23\n",
       "24    RT @drdineshias: First claim raised under #Ayu...     24\n",
       "25    RT @centerofright: First claim made on #Ayushm...     25\n",
       "26    RT @centerofright: First claim made on #Ayushm...     26\n",
       "27    RT @AyushmanNHA: First claim raised under #Ayu...     27\n",
       "28    RT @drdineshias: First claim raised under #Ayu...     28\n",
       "29    RT @MrsGandhi: Mega health plan crippled as AA...     29\n",
       "...                                                 ...    ...\n",
       "1970  RT @khanamirullah: The Ayushma  plan is typica...   1970\n",
       "1971  ö__ö_Áö_Ëö_¿ö__ö_£ö__ ö_´ö«ó ö_¿ö« ö_Âö_µö_ìö...   1971\n",
       "1972  RT @AyushmanNHA: First claim raised under #Ayu...   1972\n",
       "1973  RT @mlkhattar: 19 day old Karishma from Karnal...   1973\n",
       "1974  RT @narendramodi: During the 28th PRAGATI Sess...   1974\n",
       "1975  RT @narendramodi: During the 28th PRAGATI Sess...   1975\n",
       "1976  RT @JPNadda: Haryana girl becomes Indiaäó»s fi...   1976\n",
       "1977  Write Prophesy Ayushman Bharat (Gov't Health I...   1977\n",
       "1978  RT @ANI: Haryana: 19-days-old Karishma, born a...   1978\n",
       "1979  RT @AyushmanNHA: First claim raised under #Ayu...   1979\n",
       "1980  RT @mlkhattar: 19 day old Karishma from Karnal...   1980\n",
       "1981  RT @kavita_tewari: First baby angel from #Ayus...   1981\n",
       "1982  RT @DrSubhashMoS: Haryana girl becomes Indiaäó...   1982\n",
       "1983  By building toilets, Modi made aam admi vulner...   1983\n",
       "1984  RT @Rao_InderjitS: Haryana girl becomes Indiaä...   1984\n",
       "1985  RT @Ra_THORe: Born on Independence Day, Haryan...   1985\n",
       "1986  RT @spmrfoundation: Haryana girl becomes India...   1986\n",
       "1987  RT @VinodChavdaBJP: Haryana girl becomes India...   1987\n",
       "1988  RT @Rao_InderjitS: Haryana girl becomes Indiaä...   1988\n",
       "1989  Haryana girl becomes Indiaäó»s first newborn b...   1989\n",
       "1990  RT @SidharthNSingh: Pilot run of Ayushman Bhar...   1990\n",
       "1991  RT @drdineshias: First claim raised under #Ayu...   1991\n",
       "1992  RT @kuljeetschahal: Haryana girl becomes India...   1992\n",
       "1993  RT @kuljeetschahal: Haryana girl becomes India...   1993\n",
       "1994  RT @SidharthNSingh: Pilot run of Ayushman Bhar...   1994\n",
       "1995  RT @Ra_THORe: Born on Independence Day, Haryan...   1995\n",
       "1996  RT @JPNadda: Haryana girl becomes Indiaäó»s fi...   1996\n",
       "1997  RT @mlkhattar: 19 day old Karishma from Karnal...   1997\n",
       "1998  RT @JPNadda: Haryana girl becomes Indiaäó»s fi...   1998\n",
       "1999  RT @amitsurg: Ask doctors what they think abou...   1999\n",
       "\n",
       "[2000 rows x 2 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2000\n"
     ]
    }
   ],
   "source": [
    "print(len(data_text))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "document = data_text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                text  index\n",
      "0  Modi's Ayushman Bharat is born through caesare...      0\n",
      "1  RT @centerofright: First claim made on #Ayushm...      1\n",
      "2  RT @drdineshias: First claim raised under #Ayu...      2\n",
      "3  RT @centerofright: First claim made on #Ayushm...      3\n",
      "4  RT @centerofright: First claim made on #Ayushm...      4\n",
      "5  First claim raised under Ayushman Bharat with ...      5\n",
      "6  RT @SureshNakhua: #ModiCare aka Ayushman Bhara...      6\n",
      "7  RT @centerofright: First claim made on #Ayushm...      7\n",
      "8  RT @drdineshias: First claim raised under #Ayu...      8\n",
      "9  AAP puts Ayushman Bharat for Delhi in jeopardy...      9\n"
     ]
    }
   ],
   "source": [
    "print(document[:10])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "import gensim\n",
    "from gensim.utils import simple_preprocess\n",
    "from gensim.parsing.preprocessing import STOPWORDS\n",
    "from nltk.stem import WordNetLemmatizer, SnowballStemmer\n",
    "from nltk.stem.porter import *\n",
    "import nltk\n",
    "import numpy as np\n",
    "np.random.seed(2018)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package wordnet to /Users/sagban/nltk_data...\n",
      "[nltk_data]   Package wordnet is already up-to-date!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nltk.download('wordnet')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "def lemmatize_stemming(text):\n",
    "    stemmer = PorterStemmer()\n",
    "    return stemmer.stem(WordNetLemmatizer().lemmatize(text, pos='v'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'sleep'"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lemmatize_stemming(\"sleeps\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "import re\n",
    "def remove_url(text):\n",
    "    result = re.sub(r\"http\\S+\", \"\", text)\n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       [modi, ayushman, bharat, bear, caesarean, sect...\n",
       "1       [centerofright, claim, ayushmanbharat, great, ...\n",
       "2       [drdineshia, claim, rais, ayushmanbharat, babi...\n",
       "3       [centerofright, claim, ayushmanbharat, great, ...\n",
       "4       [centerofright, claim, ayushmanbharat, great, ...\n",
       "5       [claim, rais, ayushman, bharat, birth, girl, æ...\n",
       "6       [sureshnakhua, modicar, ayushman, bharat, bear...\n",
       "7       [centerofright, claim, ayushmanbharat, great, ...\n",
       "8       [drdineshia, claim, rais, ayushmanbharat, babi...\n",
       "9       [put, ayushman, bharat, delhi, jeopardi, deman...\n",
       "10      [centerofright, claim, ayushmanbharat, great, ...\n",
       "11      [centerofright, claim, ayushmanbharat, great, ...\n",
       "12      [centerofright, claim, ayushmanbharat, great, ...\n",
       "13      [centerofright, claim, ayushmanbharat, great, ...\n",
       "14      [centerofright, claim, ayushmanbharat, great, ...\n",
       "15      [centerofright, claim, ayushmanbharat, great, ...\n",
       "16      [centerofright, claim, ayushmanbharat, great, ...\n",
       "17      [drdineshia, claim, rais, ayushmanbharat, babi...\n",
       "18      [centerofright, claim, ayushmanbharat, great, ...\n",
       "19      [economictim, modicar, claim, rais, ayushmanbh...\n",
       "20      [nhmgujarat, mission, director, nhmgujarat, or...\n",
       "21      [centerofright, claim, ayushmanbharat, great, ...\n",
       "22       [day, launch, ayushman, bharat, babi, ækarishma]\n",
       "23       [day, launch, ayushman, bharat, babi, ækarishma]\n",
       "24      [drdineshia, claim, rais, ayushmanbharat, babi...\n",
       "25      [centerofright, claim, ayushmanbharat, great, ...\n",
       "26      [centerofright, claim, ayushmanbharat, great, ...\n",
       "27      [ayushmannha, claim, rais, ayushmanbharat, bab...\n",
       "28      [drdineshia, claim, rais, ayushmanbharat, babi...\n",
       "29      [mrsgandhi, mega, health, plan, crippl, insist...\n",
       "                              ...                        \n",
       "1970    [khanamirullah, ayushma, plan, typic, modi, id...\n",
       "1971    [ö__ö_áö_ëö_, ö__ö_, ö_âö_µö_ìö__ö__, ö_åö__ö,...\n",
       "1972    [ayushmannha, claim, rais, ayushmanbharat, bab...\n",
       "1973    [mlkhattar, karishma, karnal, india, ayushmanb...\n",
       "1974    [narendramodi, pragati, session, today, review...\n",
       "1975    [narendramodi, pragati, session, today, review...\n",
       "1976    [jpnadda, haryana, girl, indiaäó, newborn, ben...\n",
       "1977    [write, prophesi, ayushman, bharat, health, in...\n",
       "1978    [haryana, day, karishma, bear, kalpana, chawla...\n",
       "1979    [ayushmannha, claim, rais, ayushmanbharat, bab...\n",
       "1980    [mlkhattar, karishma, karnal, india, ayushmanb...\n",
       "1981    [kavita_tewari, babi, angel, ayushman, yojna, ...\n",
       "1982    [drsubhashmo, haryana, girl, indiaäó, newborn,...\n",
       "1983    [build, toilet, modi, admi, vulner, diseas, cu...\n",
       "1984    [rao_inderjit, haryana, girl, indiaäó, newborn...\n",
       "1985    [ra_thor, bear, independ, haryana, girl, india...\n",
       "1986    [spmrfoundat, haryana, girl, indiaäó, newborn,...\n",
       "1987    [vinodchavdabjp, haryana, girl, indiaäó, newbo...\n",
       "1988    [rao_inderjit, haryana, girl, indiaäó, newborn...\n",
       "1989    [haryana, girl, indiaäó, newborn, beneficiari,...\n",
       "1990    [sidharthnsingh, pilot, ayushman, bharat, yoja...\n",
       "1991    [drdineshia, claim, rais, ayushmanbharat, babi...\n",
       "1992    [kuljeetschah, haryana, girl, indiaäó, newborn...\n",
       "1993    [kuljeetschah, haryana, girl, indiaäó, newborn...\n",
       "1994    [sidharthnsingh, pilot, ayushman, bharat, yoja...\n",
       "1995    [ra_thor, bear, independ, haryana, girl, india...\n",
       "1996    [jpnadda, haryana, girl, indiaäó, newborn, ben...\n",
       "1997    [mlkhattar, karishma, karnal, india, ayushmanb...\n",
       "1998    [jpnadda, haryana, girl, indiaäó, newborn, ben...\n",
       "1999    [amitsurg, doctor, think, äóìprice, healthcare...\n",
       "Name: text, Length: 2000, dtype: object"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "def rem_user(Tweet):\n",
    "    return re.sub('@[^\\s]+','',Tweet)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'RT  First claim made on'"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rem_user(\"RT @centerofright: First claim made on\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [],
   "source": [
    "def spellcheck(text):\n",
    "    return  re.sub(r'[^a-z]', '', text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [],
   "source": [
    "def preprocess(text):\n",
    "    text = remove_url(text)\n",
    "    text = rem_user(text)\n",
    "    result = []\n",
    "    for token in gensim.utils.simple_preprocess(text):\n",
    "        if token not in gensim.parsing.preprocessing.STOPWORDS and len(token) > 3:\n",
    "            lem = lemmatize_stemming(token)\n",
    "            spl = spellcheck(lem)\n",
    "            result.append(spl)\n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['claim']"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "preprocess(\"RT @centerofright: First claim made on\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "original document: \n",
      "['RT', '@BharatHaryana:', 'Baby', 'Karishma', 'of', 'Karnal,', 'Haryana', 'arrives', 'as', 'the', 'first', 'claim', 'beneficiary', 'of', 'Ayushman', 'Bharat', 'Scheme.', 'Congrats', 'to', 'the', 'proudäó_']\n",
      "\n",
      "\n",
      " tokenized and lemmatized document: \n",
      "['babi', 'karishma', 'karnal', 'haryana', 'arriv', 'claim', 'beneficiari', 'ayushman', 'bharat', 'scheme', 'congrat', 'proud']\n"
     ]
    }
   ],
   "source": [
    "doc_sample = document[document['index'] == 330].values[0][0]\n",
    "print('original document: ')\n",
    "words = []\n",
    "for word in doc_sample.split(' '):\n",
    "    words.append(word)\n",
    "print(words)\n",
    "print('\\n\\n tokenized and lemmatized document: ')\n",
    "print(preprocess(doc_sample))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "processed_docs = document['text'].map(preprocess)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     [modi, ayushman, bharat, bear, caesarean, sect...\n",
       "1     [claim, ayushmanbharat, great, start, modicar,...\n",
       "2     [claim, rais, ayushmanbharat, babi, girl, bear...\n",
       "3     [claim, ayushmanbharat, great, start, modicar,...\n",
       "4     [claim, ayushmanbharat, great, start, modicar,...\n",
       "5     [claim, rais, ayushman, bharat, birth, girl, h...\n",
       "6     [modicar, ayushman, bharat, bear, caesarean, s...\n",
       "7     [claim, ayushmanbharat, great, start, modicar,...\n",
       "8     [claim, rais, ayushmanbharat, babi, girl, bear...\n",
       "9     [put, ayushman, bharat, delhi, jeopardi, deman...\n",
       "10    [claim, ayushmanbharat, great, start, modicar,...\n",
       "11    [claim, ayushmanbharat, great, start, modicar,...\n",
       "12    [claim, ayushmanbharat, great, start, modicar,...\n",
       "13    [claim, ayushmanbharat, great, start, modicar,...\n",
       "14    [claim, ayushmanbharat, great, start, modicar,...\n",
       "15    [claim, ayushmanbharat, great, start, modicar,...\n",
       "16    [claim, ayushmanbharat, great, start, modicar,...\n",
       "17    [claim, rais, ayushmanbharat, babi, girl, bear...\n",
       "18    [claim, ayushmanbharat, great, start, modicar,...\n",
       "19    [modicar, claim, rais, ayushmanbharat, today, ...\n",
       "20    [mission, director, organis, yoga, encourag, l...\n",
       "21    [claim, ayushmanbharat, great, start, modicar,...\n",
       "22      [day, launch, ayushman, bharat, babi, karishma]\n",
       "23      [day, launch, ayushman, bharat, babi, karishma]\n",
       "24    [claim, rais, ayushmanbharat, babi, girl, bear...\n",
       "25    [claim, ayushmanbharat, great, start, modicar,...\n",
       "26    [claim, ayushmanbharat, great, start, modicar,...\n",
       "27    [claim, rais, ayushmanbharat, babi, girl, bear...\n",
       "28    [claim, rais, ayushmanbharat, babi, girl, bear...\n",
       "29    [mega, health, plan, crippl, insist, flagship,...\n",
       "Name: text, dtype: object"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "processed_docs[:30]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 ayushman\n",
      "1 bear\n",
      "2 bharat\n",
      "3 caesarean\n",
      "4 econom\n",
      "5 modi\n",
      "6 section\n",
      "7 time\n",
      "8 ayushmanbharat\n",
      "9 birth\n",
      "10 c\n",
      "11 claim\n",
      "12 fittingli\n",
      "13 girl\n",
      "14 great\n",
      "15 modicar\n",
      "16 start\n",
      "17 babi\n",
      "18 chawla\n",
      "19 hary\n",
      "20 hospit\n",
      "21 kalpana\n",
      "22 rais\n",
      "23 haryana\n",
      "24 delhi\n",
      "25 demand\n",
      "26 jeopardi\n",
      "27 parti\n",
      "28 put\n",
      "29 scheme\n",
      "30 kal\n",
      "31 today\n",
      "32 director\n",
      "33 encourag\n",
      "34 healthi\n",
      "35 learn\n",
      "36 lifestyl\n",
      "37 mission\n",
      "38 organis\n",
      "39 par\n",
      "40 yoga\n",
      "41 day\n",
      "42 karishma\n",
      "43 launch\n",
      "44 abpmjay\n",
      "45 arogya\n",
      "46 crippl\n",
      "47 flagship\n",
      "48 health\n",
      "49 insist\n",
      "50 mantri\n",
      "51 mega\n",
      "52 plan\n",
      "53 pradhan\n",
      "54 yojna\n",
      "55 all\n",
      "56 bank\n",
      "57 direct\n",
      "58 hous\n",
      "59 loan\n",
      "60 mudhra\n",
      "61 payment\n",
      "62 power\n",
      "63 transfer\n",
      "64 arriv\n",
      "65 beneficiari\n",
      "66 congrat\n",
      "67 karnal\n",
      "68 proud\n",
      "69 aspect\n",
      "70 infrastructur\n",
      "71 pragati\n",
      "72 proj\n",
      "73 relat\n",
      "74 review\n",
      "75 session\n",
      "76 biggest\n",
      "77 care\n",
      "78 cover\n",
      "79 financ\n",
      "80 insur\n",
      "81 lakh\n",
      "82 offer\n",
      "83 take\n",
      "84 whic\n",
      "85 world\n",
      "86 focu\n",
      "87 meet\n",
      "88 comment\n",
      "89 step\n",
      "90 cancer\n",
      "91 jagannath\n",
      "92 need\n",
      "93 odisha\n",
      "94 pecent\n",
      "95 state\n",
      "96 treatment\n",
      "97 stay\n",
      "98 want\n",
      "99 face\n",
      "100 opposit\n",
      "101 slap\n",
      "102 tight\n",
      "103 arvind\n",
      "104 gov\n",
      "105 implement\n",
      "106 kejriw\n",
      "107 mukhya\n",
      "108 refus\n",
      "109 renam\n",
      "110 yojana\n",
      "111 engvind\n",
      "112 indvspak\n",
      "113 highlight\n",
      "114 india\n",
      "115 jaw\n",
      "116 kumar\n",
      "117 panel\n",
      "118 pradeep\n",
      "119 prin\n",
      "120 vya\n",
      "121 mother\n",
      "122 news\n",
      "123 ha\n",
      "124 hospita\n",
      "125 public\n",
      "126 auspici\n",
      "127 be\n",
      "128 fantast\n",
      "129 genwork\n",
      "130 healthier\n",
      "131 support\n",
      "132 work\n",
      "133 cesarean\n",
      "134 modicare\n",
      "135 callous\n",
      "136 govern\n",
      "137 know\n",
      "138 peopl\n",
      "139 show\n",
      "140 ambiti\n",
      "141 govt\n",
      "142 highli\n",
      "143 t\n",
      "144 hospital\n",
      "145 h\n",
      "146 confus\n",
      "147 get\n",
      "148 grand\n",
      "149 hard\n",
      "150 soft\n",
      "151 what\n",
      "152 deliveri\n",
      "153 happen\n",
      "154 janani\n",
      "155 simpl\n",
      "156 suraksha\n",
      "157 narendra\n",
      "158 settl\n",
      "159 elig\n",
      "160 entitl\n",
      "161 come\n",
      "162 ensur\n",
      "163 poor\n",
      "164 sector\n",
      "165 top\n",
      "166 transform\n",
      "167 administr\n",
      "168 advertis\n",
      "169 assam\n",
      "170 automat\n",
      "171 di\n",
      "172 doubl\n",
      "173 human\n",
      "174 lot\n",
      "175 make\n",
      "176 resourc\n",
      "177 insura\n",
      "178 pioneerhealth\n",
      "179 saturday\n",
      "180 regist\n",
      "181 ins\n",
      "182 august\n",
      "183 benefic\n",
      "184 celebr\n",
      "185 bene\n",
      "186 attain\n",
      "187 statu\n",
      "188 ayushmaanbharat\n",
      "189 billion\n",
      "190 bless\n",
      "191 elect\n",
      "192 indian\n",
      "193 hearten\n",
      "194 increas\n",
      "195 spend\n",
      "196 amit\n",
      "197 father\n",
      "198 kum\n",
      "199 celeb\n",
      "200 cool\n",
      "201 creat\n",
      "202 devi\n",
      "203 golden\n",
      "204 platform\n",
      "205 record\n",
      "206 rudraprayag\n",
      "207 tara\n",
      "208 u\n",
      "209 avoid\n",
      "210 futur\n",
      "211 kichdi\n",
      "212 month\n",
      "213 sarkar\n",
      "214 tide\n",
      "215 turn\n",
      "216 \n",
      "217 abash\n",
      "218 amrapa\n",
      "219 buyer\n",
      "220 citi\n",
      "221 digit\n",
      "222 home\n",
      "223 rera\n",
      "224 smart\n",
      "225 stress\n",
      "226 swachh\n",
      "227 yojona\n",
      "228 best\n",
      "229 bodi\n",
      "230 doorstep\n",
      "231 frankli\n",
      "232 local\n",
      "233 mobilize\n",
      "234 reach\n",
      "235 repres\n",
      "236 agenc\n",
      "237 centr\n",
      "238 common\n",
      "239 nation\n",
      "240 servic\n",
      "241 sign\n",
      "242 valid\n",
      "243 verif\n",
      "244 am\n",
      "245 procedur\n",
      "246 un\n",
      "247 unabl\n",
      "248 understand\n",
      "249 benefit\n",
      "250 certain\n",
      "251 identif\n",
      "252 congratul\n",
      "253 fee\n",
      "254 googl\n",
      "255 share\n",
      "256 deni\n",
      "257 program\n",
      "258 bristl\n",
      "259 critic\n",
      "260 jumla\n",
      "261 myth\n",
      "262 popularli\n",
      "263 realit\n",
      "264 separ\n",
      "265 bengaluru\n",
      "266 colleg\n",
      "267 discuss\n",
      "268 hemant\n",
      "269 accept\n",
      "270 center\n",
      "271 index\n",
      "272 po\n",
      "273 problem\n",
      "274 hole\n",
      "275 needi\n",
      "276 r\n",
      "277 real\n",
      "278 see\n",
      "279 websit\n",
      "280 con\n",
      "281 appeas\n",
      "282 interest\n",
      "283 pmjay\n",
      "284 privat\n",
      "285 district\n",
      "286 minist\n",
      "287 narendramod\n",
      "288 prime\n",
      "289 ku\n",
      "290 account\n",
      "291 naxal\n",
      "292 promis\n",
      "293 refil\n",
      "294 ujjwala\n",
      "295 urban\n",
      "296 alipuram\n",
      "297 inaugur\n",
      "298 mainli\n",
      "299 no\n",
      "300 upgrad\n",
      "301 vizag\n",
      "302 well\n",
      "303 ben\n",
      "304 modiji\n",
      "305 parent\n",
      "306 child\n",
      "307 expens\n",
      "308 like\n",
      "309 arogaya\n",
      "310 central\n",
      "311 hurdl\n",
      "312 minut\n",
      "313 roll\n",
      "314 week\n",
      "315 break\n",
      "316 caesar\n",
      "317 path\n",
      "318 angiographi\n",
      "319 angioplasti\n",
      "320 correct\n",
      "321 inform\n",
      "322 not\n",
      "323 publish\n",
      "324 stent\n",
      "325 chief\n",
      "326 join\n",
      "327 missi\n",
      "328 naveen\n",
      "329 patnaik\n",
      "330 propos\n",
      "331 protect\n",
      "332 reject\n",
      "333 newborn\n",
      "334 ap\n",
      "335 namo\n",
      "336 protec\n",
      "337 angel\n",
      "338 ar\n",
      "339 balrampur\n",
      "340 go\n",
      "341 pilot\n",
      "342 tomorrow\n",
      "343 busi\n",
      "344 cost\n",
      "345 doctor\n",
      "346 ear\n",
      "347 healthcare\n",
      "348 m\n",
      "349 price\n",
      "350 slash\n",
      "351 sure\n",
      "352 think\n",
      "353 nam\n",
      "354 alleg\n",
      "355 fraud\n",
      "356 select\n",
      "357 staff\n",
      "358 b\n",
      "359 comprehens\n",
      "360 ayushma\n",
      "361 idea\n",
      "362 imposs\n",
      "363 overnight\n",
      "364 revolut\n",
      "365 sound\n",
      "366 target\n",
      "367 typic\n",
      "368 nmapp\n",
      "369 auto\n",
      "370 erfllen\n",
      "371 erst\n",
      "372 indien\n",
      "373 pickup\n",
      "374 wikyou\n",
      "375 ht\n",
      "376 independ\n",
      "377 ahead\n",
      "378 formal\n",
      "379 hope\n",
      "380 launc\n",
      "381 process\n",
      "382 settlement\n",
      "383 stabil\n",
      "384 system\n",
      "385 trial\n",
      "386 htt\n",
      "387 modijifor\n",
      "388 bhar\n",
      "389 medic\n",
      "390 polici\n",
      "391 incomplet\n",
      "392 thankyou\n",
      "393 urg\n",
      "394 healthyindia\n",
      "395 ach\n",
      "396 i\n",
      "397 kind\n",
      "398 list\n",
      "399 night\n",
      "400 tell\n",
      "401 visit\n",
      "402 wait\n",
      "403 year\n",
      "404 feasibl\n",
      "405 model\n",
      "406 popul\n",
      "407 project\n",
      "408 style\n",
      "409 latestnews\n",
      "410 for\n",
      "411 hour\n",
      "412 readi\n",
      "413 slashing\n",
      "414 rsquo\n",
      "415 o\n",
      "416 perform\n",
      "417 assembl\n",
      "418 convenor\n",
      "419 kavali\n",
      "420 mannep\n",
      "421 media\n",
      "422 social\n",
      "423 venkateswarlu\n",
      "424 prakashjavdekar\n",
      "425 ask\n",
      "426 dude\n",
      "427 everybodi\n",
      "428 farm\n",
      "429 reserv\n",
      "430 waiver\n",
      "431 adhar\n",
      "432 allow\n",
      "433 and\n",
      "434 card\n",
      "435 link\n",
      "436 request\n",
      "437 victim\n",
      "438 experi\n",
      "439 gettin\n",
      "440 issu\n",
      "441 kerela\n",
      "442 podcast\n",
      "443 coverag\n",
      "444 fast\n",
      "445 initi\n",
      "446 monday\n",
      "447 nadda\n",
      "448 say\n",
      "449 track\n",
      "450 union\n",
      "451 univers\n",
      "452 call\n",
      "453 aarogya\n",
      "454 abhiyaan\n",
      "455 crore\n",
      "456 live\n",
      "457 middl\n",
      "458 devot\n",
      "459 fulli\n",
      "460 wel\n",
      "461 advert\n",
      "462 event\n",
      "463 free\n",
      "464 medtech\n",
      "465 medtekon\n",
      "466 mtai\n",
      "467 venu\n",
      "468 hospitals\n",
      "469 opportun\n",
      "470 class\n",
      "471 healthcar\n",
      "472 tha\n",
      "473 analysi\n",
      "474 columnist\n",
      "475 nitya\n",
      "476 pahuja\n",
      "477 dadra\n",
      "478 have\n",
      "479 nagar\n",
      "480 base\n",
      "481 insuran\n",
      "482 merg\n",
      "483 aadhar\n",
      "484 exclus\n",
      "485 gpon\n",
      "486 interview\n",
      "487 societi\n",
      "488 app\n",
      "489 ambi\n",
      "490 complet\n",
      "491 detail\n",
      "492 notif\n",
      "493 updat\n",
      "494 venues\n",
      "495 awasidhi\n",
      "496 cap\n",
      "497 cheap\n",
      "498 gener\n",
      "499 includ\n",
      "500 kendra\n",
      "501 medicin\n",
      "502 store\n",
      "503 che\n",
      "504 healthiness\n",
      "505 pmch\n",
      "506 kannadanew\n",
      "507 karnataka\n",
      "508 dirti\n",
      "509 polit\n",
      "510 janardan\n",
      "511 mela\n",
      "512 poojari\n",
      "513 visibl\n",
      "514 wasn\n",
      "515 aim\n",
      "516 expand\n",
      "517 newindia\n",
      "518 preventi\n",
      "519 primari\n",
      "520 shri\n",
      "521 a\n",
      "522 ahuja\n",
      "523 barwala\n",
      "524 farmer\n",
      "525 hisar\n",
      "526 kamal\n",
      "527 karnalrst\n",
      "528 respect\n",
      "529 small\n",
      "530 pradhanmantri\n",
      "531 medicar\n",
      "532 pathbreak\n",
      "533 corner\n",
      "534 forward\n",
      "535 hearing\n",
      "536 look\n",
      "537 speaker\n",
      "538 vital\n",
      "539 brand\n",
      "540 develop\n",
      "541 swasth\n",
      "542 thing\n",
      "543 differ\n",
      "544 special\n",
      "545 he\n",
      "546 bearing\n",
      "547 lucknow\n",
      "548 anti\n",
      "549 mudra\n",
      "550 n\n",
      "551 oppos\n",
      "552 pmay\n",
      "553 kejriwal\n",
      "554 unfortun\n",
      "555 effect\n",
      "556 impact\n",
      "557 massiv\n",
      "558 cgbjp\n",
      "559 modifor\n",
      "560 progress\n",
      "561 read\n",
      "562 ac\n",
      "563 laughabl\n",
      "564 neglig\n",
      "565 cough\n",
      "566 abhinandan\n",
      "567 ayus\n",
      "568 chatra\n",
      "569 chhatra\n",
      "570 guru\n",
      "571 honour\n",
      "572 parishad\n",
      "573 student\n",
      "574 teacher\n",
      "575 vandan\n",
      "576 vika\n",
      "577 aushmanbharat\n",
      "578 dont\n",
      "579 huge\n",
      "580 cashless\n",
      "581 block\n",
      "582 good\n",
      "583 modica\n",
      "584 via\n",
      "585 fe\n",
      "586 oper\n",
      "587 provid\n",
      "588 tertiari\n",
      "589 trust\n",
      "590 task\n",
      "591 couldnot\n",
      "592 download\n",
      "593 altern\n",
      "594 diesel\n",
      "595 jump\n",
      "596 petrol\n",
      "597 till\n",
      "598 assur\n",
      "599 bulk\n",
      "600 countri\n",
      "601 line\n",
      "602 poverti\n",
      "603 expenditur\n",
      "604 pocket\n",
      "605 posit\n",
      "606 reduc\n",
      "607 v\n",
      "608 fulfil\n",
      "609 visi\n",
      "610 connect\n",
      "611 electrifi\n",
      "612 household\n",
      "613 inflat\n",
      "614 septemb\n",
      "615 villag\n",
      "616 na\n",
      "617 point\n",
      "618 engag\n",
      "619 messag\n",
      "620 outreach\n",
      "621 propag\n",
      "622 activ\n",
      "623 message\n",
      "624 admi\n",
      "625 build\n",
      "626 cure\n",
      "627 diseas\n",
      "628 faec\n",
      "629 toilet\n",
      "630 vulner\n",
      "631 arora\n",
      "632 ayush\n",
      "633 current\n",
      "634 financi\n",
      "635 journalist\n",
      "636 stori\n",
      "637 ayushm\n",
      "638 bhushan\n",
      "639 econo\n",
      "640 irrespect\n",
      "641 prophesi\n",
      "642 write\n",
      "643 launche\n"
     ]
    }
   ],
   "source": [
    "dictionary = gensim.corpora.Dictionary(processed_docs)\n",
    "count = 0\n",
    "for k, v in dictionary.iteritems():\n",
    "    print(k, v)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<gensim.corpora.dictionary.Dictionary at 0x13195d6d8>"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dictionary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [],
   "source": [
    "dictionary.filter_extremes(no_below=15, no_above=0.5, keep_n=100000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[(51, 2)]"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bow_corpus = [dictionary.doc2bow(doc) for doc in processed_docs]\n",
    "bow_corpus[410]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
